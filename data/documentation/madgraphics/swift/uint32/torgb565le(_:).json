{"abstract":[{"text":"Converts a pixel to RGB565LE format (16-bit, little-endian).","type":"text"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"hierarchy":{"paths":[["doc:\/\/MadGraphics\/documentation\/MadGraphics","doc:\/\/MadGraphics\/documentation\/MadGraphics\/Swift","doc:\/\/MadGraphics\/documentation\/MadGraphics\/Swift\/UInt32"]]},"metadata":{"modules":[{"name":"MadGraphics","relatedModules":["Swift"]}],"title":"toRGB565LE(_:)","role":"symbol","externalID":"s:s6UInt32V11MadGraphicsE10toRGB565LEys6UInt16VABFZ","roleHeading":"Type Method","extendedModule":"Swift","symbolKind":"method","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"toRGB565LE","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11MadGraphics5Pixela","text":"Pixel","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s6UInt16V","text":"UInt16","kind":"typeIdentifier"}]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"toRGB565LE","kind":"identifier"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"pixel"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Pixel","preciseIdentifier":"s:11MadGraphics5Pixela","identifier":"doc:\/\/MadGraphics\/documentation\/MadGraphics\/Pixel"},{"kind":"text","text":") -> "},{"text":"UInt16","preciseIdentifier":"s:s6UInt16V","kind":"typeIdentifier"}]}]},{"kind":"parameters","parameters":[{"name":"pixel","content":[{"inlineContent":[{"type":"text","text":"The source pixel to convert."}],"type":"paragraph"}]}]},{"kind":"content","content":[{"text":"Return Value","anchor":"return-value","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"A 16-bit RGB565LE value.","type":"text"}]}]},{"kind":"content","content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"style":"note","name":"Note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The conversion preserves the most significant bits of each color channel."}]}],"type":"aside"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/MadGraphics\/documentation\/MadGraphics\/Swift\/UInt32\/toRGB565LE(_:)"},"variants":[{"paths":["\/documentation\/madgraphics\/swift\/uint32\/torgb565le(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","references":{"doc://MadGraphics/documentation/MadGraphics/Swift":{"title":"Swift","kind":"symbol","url":"\/documentation\/madgraphics\/swift","role":"collection","type":"topic","abstract":[],"identifier":"doc:\/\/MadGraphics\/documentation\/MadGraphics\/Swift"},"doc://MadGraphics/documentation/MadGraphics":{"type":"topic","identifier":"doc:\/\/MadGraphics\/documentation\/MadGraphics","role":"collection","abstract":[],"url":"\/documentation\/madgraphics","title":"MadGraphics","kind":"symbol"},"doc://MadGraphics/documentation/MadGraphics/Swift/UInt32/toRGB565LE(_:)":{"type":"topic","kind":"symbol","url":"\/documentation\/madgraphics\/swift\/uint32\/torgb565le(_:)","title":"toRGB565LE(_:)","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"toRGB565LE","kind":"identifier"},{"kind":"text","text":"("},{"text":"Pixel","preciseIdentifier":"s:11MadGraphics5Pixela","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"UInt16","preciseIdentifier":"s:s6UInt16V"}],"role":"symbol","abstract":[{"text":"Converts a pixel to RGB565LE format (16-bit, little-endian).","type":"text"}],"identifier":"doc:\/\/MadGraphics\/documentation\/MadGraphics\/Swift\/UInt32\/toRGB565LE(_:)"},"doc://MadGraphics/documentation/MadGraphics/Pixel":{"abstract":[{"type":"text","text":"A type alias for a 32-bit unsigned integer that represents a pixelâ€™s color and alpha values."},{"type":"text","text":" "},{"text":"The pixel format is ARGB (Alpha, Red, Green, Blue) with 8 bits per channel.","type":"text"}],"identifier":"doc:\/\/MadGraphics\/documentation\/MadGraphics\/Pixel","title":"Pixel","kind":"symbol","url":"\/documentation\/madgraphics\/pixel","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"text":"Pixel","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"Pixel","kind":"identifier"}],"role":"symbol"},"doc://MadGraphics/documentation/MadGraphics/Swift/UInt32":{"identifier":"doc:\/\/MadGraphics\/documentation\/MadGraphics\/Swift\/UInt32","type":"topic","url":"\/documentation\/madgraphics\/swift\/uint32","abstract":[{"text":"Extension providing pixel format conversion functionality.","type":"text"}],"kind":"symbol","role":"symbol","fragments":[{"text":"extension","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","preciseIdentifier":"s:s6UInt32V","text":"UInt32"}],"navigatorTitle":[{"text":"UInt32","kind":"identifier"}],"title":"UInt32"}}}